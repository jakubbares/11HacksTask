from flask_sqlalchemy import SQLAlchemy
from sqlalchemy.ext.declarative import declarative_base
from app.data.models import db, CRUD
from sqlalchemy.exc import SQLAlchemyError




class WyEvents(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    wyid = db.Column(db.Integer)
    player_wyid = db.Column(db.Integer)
    team_wyid = db.Column(db.Integer)
    match_wyid = db.Column(db.Integer)
    league_wyid = db.Column(db.Integer)
    match_period = db.Column(db.Integer)
    event_sec = db.Column(db.Float)
    event_id = db.Column(db.Integer)
    event_name = db.Column(db.String)
    px = db.Column(db.Integer)
    py = db.Column(db.Integer)
    to_px = db.Column(db.Integer)
    to_py = db.Column(db.Integer)
    sub_event_id = db.Column(db.Integer)
    sub_event_name = db.Column(db.String)
    tag_labels = db.Column(db.String)
    tag_ids = db.Column(db.String)

    def __init__(self, wyid, player_wyid, team_wyid, match_wyid, league_wyid, match_period, event_sec, event_id, event_name, px, py, to_px, to_py, sub_event_id, sub_event_name, tag_labels, tag_ids):
        self.wyid = wyid
        self.player_wyid = player_wyid
        self.team_wyid = team_wyid
        self.match_wyid = match_wyid
        self.league_wyid = league_wyid
        self.match_period = match_period
        self.event_sec = event_sec
        self.event_id = event_id
        self.event_name = event_name
        self.px = px
        self.py = py
        self.to_px = to_px
        self.to_py = to_py
        self.sub_event_id = sub_event_id
        self.sub_event_name = sub_event_name
        self.tag_labels = tag_labels
        self.tag_ids = tag_ids


class WyPlayer(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    wyid = db.Column(db.Integer)
    name = db.Column(db.String(50))
    name_unaccent = db.Column(db.String(50))
    height = db.Column(db.Integer)
    weight = db.Column(db.Integer)
    birthday = db.Column(db.String(255))
    nationality = db.Column(db.String(50))
    position = db.Column(db.String(20))
    foot = db.Column(db.String)
    team_wyid = db.Column(db.Integer)
    league_wyid = db.Column(db.Integer)


    def __init__(self, wyid, name, height, weight, birthday, nationality, position, foot, team_wyid, league_wyid):
        self.wyid = wyid
        self.name = name
        self.height = height
        self.weight = weight
        self.birthday = birthday
        self.nationality = nationality
        self.position = position
        self.foot = foot
        self.team_wyid = team_wyid
        self.league_wyid = league_wyid


class WyLeague(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    wyid = db.Column(db.Integer)
    tier = db.Column(db.Integer)
    name = db.Column(db.String(50))
    country_name = db.Column(db.String(50))

    def __init__(self, wyid, name, tier, country):
        self.wyid = wyid
        self.name = name
        self.tier = tier
        self.country_name = country


class WyTeamLeagueLink(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    team_wyid = db.Column(db.Integer)
    league_wyid = db.Column(db.Integer)
    season = db.Column(db.String)


class WyTeam(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    wyid = db.Column(db.Integer)
    league_wyid = db.Column(db.Integer)
    name = db.Column(db.String(50))
    city = db.Column(db.String(50))
    country = db.Column(db.String(30))


    def __init__(self, wyid, league_wyid, name, city, country):
        self.wyid = wyid
        self.league_wyid = league_wyid
        self.name = name
        self.city = city
        self.country = country


class WyMatchPlayerStats(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    match_wyid = db.Column(db.Integer)
    player_wyid = db.Column(db.Integer)
    match_date = db.Column(db.String(255))
    team_wyid = db.Column(db.Integer)
    league_wyid = db.Column(db.Integer)
    season_wyid = db.Column(db.Integer)
    minutes = db.Column(db.Integer)
    shirt_number = db.Column(db.Integer)

    def __init__(self, match_wyid, player_wyid, match_date, team_wyid, league_wyid, season_wyid, minutes, shirt_number):
        self.match_wyid = match_wyid
        self.player_wyid = player_wyid
        self.match_date = match_date
        self.team_wyid = team_wyid
        self.league_wyid = league_wyid
        self.season_wyid = season_wyid
        self.minutes = minutes
        self.shirt_number = shirt_number

class WyMatch(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    wyid = db.Column(db.Integer)
    match_date = db.Column(db.String(255))
    league_wyid = db.Column(db.Integer)
    season_wyid = db.Column(db.Integer)
    round_wyid = db.Column(db.Integer)
    week = db.Column(db.Integer)
    home_team_wyid = db.Column(db.Integer)
    guest_team_wyid = db.Column(db.Integer)
    score = db.Column(db.String(255))
    season = db.Column(db.String(20))
    season = db.Column(db.String(255))


    def __init__(self, wyid, match_date, league_wyid, season_wyid, round_wyid, week, home_team_wyid, guest_team_wyid, score, season):
        self.wyid = wyid
        self.match_date = match_date
        self.league_wyid = league_wyid
        self.season_wyid = season_wyid
        self.round_wyid = round_wyid
        self.week = week
        self.home_team_wyid = home_team_wyid
        self.guest_team_wyid = guest_team_wyid
        self.score = score
        self.season = season


class SparkWyModelsMatchPlayer(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    league_tier = db.Column(db.Integer)
    league_name = db.Column(db.String)
    country_name = db.Column(db.String)
    season_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    match_wyid = db.Column(db.Integer)
    team_wyid = db.Column(db.Integer)
    team_name = db.Column(db.String)
    player_wyid = db.Column(db.Integer)
    player_name = db.Column(db.String)
    nationality = db.Column(db.String)
    birthday = db.Column(db.Date)
    height = db.Column(db.Integer)
    weight = db.Column(db.Integer)
    primary_position_name = db.Column(db.String)
    primary_position_code = db.Column(db.String)
    primary_position_percentage = db.Column(db.Float)
    secondary_position_name = db.Column(db.String)
    secondary_position_code = db.Column(db.String)
    secondary_position_percentage = db.Column(db.Float)
    third_position_name = db.Column(db.String)
    third_position_code = db.Column(db.String)
    third_position_percentage = db.Column(db.Float)
    foot = db.Column(db.String)
    matches_count = db.Column(db.Integer)
    minutes = db.Column(db.Integer)
    shots = db.Column(db.Integer)
    touch_in_box = db.Column(db.Integer)
    offsides = db.Column(db.Integer)
    penalties = db.Column(db.Integer)
    yellow_cards = db.Column(db.Integer)
    red_cards = db.Column(db.Integer)
    goals = db.Column(db.Integer)
    assists = db.Column(db.Integer)
    passes = db.Column(db.Integer)
    runs = db.Column(db.Integer)
    buildup = db.Column(db.Integer)
    maintenance = db.Column(db.Integer)
    sustained_threat = db.Column(db.Integer)
    fast_tempo = db.Column(db.Integer)
    counter_attacks = db.Column(db.Integer)
    shots_by_primary_foot_percentage = db.Column(db.Float)
    xg_total = db.Column(db.Float)
    runs_p100_actions = db.Column(db.Float)
    passes_p100_actions = db.Column(db.Float)
    average_x = db.Column(db.Float)
    average_y = db.Column(db.Float)
    average_shot_distance = db.Column(db.Float)
    scoring_contribution_p90 = db.Column(db.Float)
    counterpressing_recoveries_low_p90 = db.Column(db.Float)
    counterpressing_recoveries_mid_p90 = db.Column(db.Float)
    counterpressing_recoveries_high_p90 = db.Column(db.Float)
    recoveries_low_p90 = db.Column(db.Float)
    recoveries_mid_p90 = db.Column(db.Float)
    recoveries_high_p90 = db.Column(db.Float)
    infractions_low_p90 = db.Column(db.Float)
    infractions_mid_p90 = db.Column(db.Float)
    infractions_high_p90 = db.Column(db.Float)
    padj_interceptions_p90 = db.Column(db.Float)
    padj_aerial_duels_p90 = db.Column(db.Float)
    padj_sliding_tackles_p90 = db.Column(db.Float)
    padj_clearance_p90 = db.Column(db.Float)
    padj_offensive_duels_p90 = db.Column(db.Float)
    padj_defensive_duels_p90 = db.Column(db.Float)
    assists_p90 = db.Column(db.Float)
    second_assists_p90 = db.Column(db.Float)
    third_assists_p90 = db.Column(db.Float)
    key_passes_p90 = db.Column(db.Float)
    passes_to_final_third_p90 = db.Column(db.Float)
    progressive_passes_p90 = db.Column(db.Float)
    forward_passes_p90 = db.Column(db.Float)
    lateral_passes_p90 = db.Column(db.Float)
    back_passes_p90 = db.Column(db.Float)
    linkup_plays_p90 = db.Column(db.Float)
    long_passes_p90 = db.Column(db.Float)
    missed_balls_p90 = db.Column(db.Float)
    crosses_p90 = db.Column(db.Float)
    progressive_run_p90 = db.Column(db.Float)
    accelerations_p90 = db.Column(db.Float)
    interceptions_p90 = db.Column(db.Float)
    sliding_tackles_p90 = db.Column(db.Float)
    aerial_duels_p90 = db.Column(db.Float)
    clearances_p90 = db.Column(db.Float)
    offensive_duels_p90 = db.Column(db.Float)
    defensive_duels_p90 = db.Column(db.Float)
    loose_ball_duels_p90 = db.Column(db.Float)
    ball_recoveries_p90 = db.Column(db.Float)
    padj_loose_ball_duels_p90 = db.Column(db.Float)
    shots_blocked_p90 = db.Column(db.Float)
    successful_passes_low_p90 = db.Column(db.Float)
    successful_passes_mid_p90 = db.Column(db.Float)
    successful_passes_high_p90 = db.Column(db.Float)
    short_or_medium_passes_p90 = db.Column(db.Float)
    padj_recoveries_low_p90 = db.Column(db.Float)
    padj_recoveries_mid_p90 = db.Column(db.Float)
    padj_recoveries_high_p90 = db.Column(db.Float)
    pressing_duels_p90 = db.Column(db.Float)
    passes_to_penalty_area_p90 = db.Column(db.Float)
    deep_completions_p90 = db.Column(db.Float)
    head_passes_p90 = db.Column(db.Float)
    deep_completed_crosses_p90 = db.Column(db.Float)
    free_kick_crosses_p90 = db.Column(db.Float)
    dribble_defences_p90 = db.Column(db.Float)
    lost_dribble_defences_p90 = db.Column(db.Float)
    shots_by_left_p90 = db.Column(db.Float)
    shots_by_right_p90 = db.Column(db.Float)
    shots_by_head_or_other_p90 = db.Column(db.Float)
    xg_p90 = db.Column(db.Float)
    xg_per_shot = db.Column(db.Float)
    non_penalty_goals_p90 = db.Column(db.Float)
    non_penalty_goals = db.Column(db.Integer)
    goals_by_head_or_other = db.Column(db.Integer)
    goals_by_head_or_other_p90 = db.Column(db.Float)
    opp_half_touches_p90 = db.Column(db.Float)
    open_play_shots_p90 = db.Column(db.Float)
    big_chances_p90 = db.Column(db.Float)
    shots_after_long_pass_p90 = db.Column(db.Float)
    shots_after_cross_p90 = db.Column(db.Float)
    shots_after_through_pass_p90 = db.Column(db.Float)
    own_shots_p90 = db.Column(db.Float)
    non_fk_outside_box_shots_p90 = db.Column(db.Float)
    non_p_dz_shots_p90 = db.Column(db.Float)
    long_balls_p90 = db.Column(db.Float)
    long_balls_received_p90 = db.Column(db.Float)
    crosses_into_small_box_p90 = db.Column(db.Float)
    received_passes_into_box_p90 = db.Column(db.Float)
    op_xA_p90 = db.Column(db.Float)
    op_second_xA_p90 = db.Column(db.Float)
    op_third_xA_p90 = db.Column(db.Float)
    op_xg_build_up_p90 = db.Column(db.Float)
    op_xg_chain_p90 = db.Column(db.Float)
    take_ons_p90 = db.Column(db.Float)
    spaces_p90 = db.Column(db.Float)
    take_ons_in_final_third_p90 = db.Column(db.Float)
    take_ons_in_box_p90 = db.Column(db.Float)
    danger_zone_entries_p90 = db.Column(db.Float)
    dispossessed_p90 = db.Column(db.Float)
    free_kick_shots_p90 = db.Column(db.Float)
    lost_balls_opp_half_p90 = db.Column(db.Float)
    lost_balls_own_half_p90 = db.Column(db.Float)
    lost_balls_leading_to_opp_shot_p90 = db.Column(db.Float)
    sp_xG_p90 = db.Column(db.Float)
    sp_xA_p90 = db.Column(db.Float)
    xG_from_corner_p90 = db.Column(db.Float)
    high_crosses_p90 = db.Column(db.Float)
    low_crosses_p90 = db.Column(db.Float)
    blocked_crosses_p90 = db.Column(db.Float)
    touch_in_box_p90 = db.Column(db.Float)
    successful_passes_to_final_third_percentage = db.Column(db.Float)
    passes_runs_percentage = db.Column(db.Float)
    spaces_total_runs_percentage = db.Column(db.Float)
    xa_per_key_passes = db.Column(db.Float)
    successful_take_ons_in_box_percentage = db.Column(db.Float)
    successful_crosses_percentage = db.Column(db.Float)
    successful_dribbles_percentage = db.Column(db.Float)
    successful_take_ons_percentage = db.Column(db.Float)
    successful_spaces_percentage = db.Column(db.Float)
    long_balls_completion = db.Column(db.Float)
    opp_half_touches_ratio = db.Column(db.Float)
    successful_crosses_into_small_box_percentage = db.Column(db.Float)
    accurate_dz_shots_percentage = db.Column(db.Float)
    successful_progressive_passes_percentage = db.Column(db.Float)
    won_dribble_defences_percentage = db.Column(db.Float)
    dz_scoring_percentage = db.Column(db.Float)
    own_shots_percentage = db.Column(db.Float)
    scoring_percentage = db.Column(db.Float)
    successful_long_passes_percentage = db.Column(db.Float)
    conversion_rate = db.Column(db.Float)
    successful_head_passes_percentage = db.Column(db.Float)
    successful_passes_to_penalty_area_percentage = db.Column(db.Float)
    loose_ball_duels_won_percentage = db.Column(db.Float)
    short_or_medium_passes_percentage = db.Column(db.Float)
    offensive_duels_won_percentage = db.Column(db.Float)
    defensive_duels_won_percentage = db.Column(db.Float)
    successful_sliding_tackles_percentage = db.Column(db.Float)
    air_challenges_completion = db.Column(db.Float)
    patch_p90 = db.Column(db.Float)
    yellow_cards_p90 = db.Column(db.Float)
    red_cards_p90 = db.Column(db.Float)
    returned_possession_p90 = db.Column(db.Float)
    shots_p90 = db.Column(db.Float)
    passes_p90 = db.Column(db.Float)
    dribbles_p90 = db.Column(db.Float)
    lost_balls_p90 = db.Column(db.Float)
    padj_offensive_ground_duels_p90 = db.Column(db.Float)
    padj_defensive_ground_duels_p90 = db.Column(db.Float)
    counterpressing_recoveries_p90 = db.Column(db.Float)
    infractions_p90 = db.Column(db.Float)
    final_third_touches_p90 = db.Column(db.Float)
    passes_into_final_third_p90 = db.Column(db.Float)
    final_third_entries_p90 = db.Column(db.Float)
    opp_half_left_wp_percentage = db.Column(db.Float)
    opp_half_mid_wp_percentage = db.Column(db.Float)
    opp_half_right_wp_percentage = db.Column(db.Float)
    own_half_left_wp_percentage = db.Column(db.Float)
    own_half_mid_wp_percentage = db.Column(db.Float)
    own_half_right_wp_percentage = db.Column(db.Float)
    successful_offensive_ground_duels_percentage = db.Column(db.Float)
    successful_defensive_ground_duels_percentage = db.Column(db.Float)
    padj_ball_recoveries_p90 = db.Column(db.Float)
    padj_patch_p90 = db.Column(db.Float)
    padj_returned_possession_p90 = db.Column(db.Float)
    padj_counterpressing_recoveries_p90 = db.Column(db.Float)
    number_of_events = db.Column(db.Integer)
    shot_distance_sum = db.Column(db.Float)
    won_dribble_defences = db.Column(db.Integer)
    smart_and_through_passes_p90 = db.Column(db.Float)
    smart_passes_p90 = db.Column(db.Float)
    through_passes_p90 = db.Column(db.Float)
    successful_smart_passes_percentage = db.Column(db.Float)
    successful_through_passes_percentage = db.Column(db.Float)
    dz_goals = db.Column(db.Integer)
    all_opp_half_wp_count = db.Column(db.Integer)
    all_own_half_wp_count = db.Column(db.Integer)
    offensive_ground_duels = db.Column(db.Integer)
    defensive_ground_duels = db.Column(db.Integer)
    successful_smart_and_through_passes_percentage = db.Column(db.Float)
    op_xG_p90 = db.Column(db.Float)
    opp_half_left_wp_percentage = db.Column(db.Float)
    opp_half_mid_wp_percentage = db.Column(db.Float)
    opp_half_right_wp_percentage = db.Column(db.Float)
    own_half_left_wp_percentage = db.Column(db.Float)
    own_half_mid_wp_percentage = db.Column(db.Float)
    own_half_right_wp_percentage = db.Column(db.Float)
    op_xG = db.Column(db.Float)
    xA_p90 = db.Column(db.Float)
    xA = db.Column(db.Float)
    padj_lost_dribble_defences_p90 = db.Column(db.Float)


class SparkWyModelsSeasonPlayer(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    primary_position_code = db.Column(db.String)
    nationality = db.Column(db.String)
    height = db.Column(db.Integer)
    weight = db.Column(db.Integer)
    birthday = db.Column(db.Date)
    league_wyid = db.Column(db.Integer)
    league_tier = db.Column(db.Integer)
    league_name = db.Column(db.String)
    season_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    team_wyid = db.Column(db.Integer)
    team_name = db.Column(db.String)
    player_wyid = db.Column(db.Integer)
    player_name = db.Column(db.String)
    minutes = db.Column(db.Integer)
    touches_in_box = db.Column(db.Integer)
    scoring_contribution = db.Column(db.Integer)
    matches_count = db.Column(db.Integer)
    number_of_events = db.Column(db.Integer)
    shots = db.Column(db.Integer)
    offsides = db.Column(db.Integer)
    penalties = db.Column(db.Integer)
    yellow_cards = db.Column(db.Integer)
    red_cards = db.Column(db.Integer)
    goals = db.Column(db.Integer)
    assists = db.Column(db.Integer)
    passes = db.Column(db.Integer)
    runs = db.Column(db.Integer)
    buildup = db.Column(db.Integer)
    maintenance = db.Column(db.Integer)
    sustained_threat = db.Column(db.Integer)
    fast_tempo = db.Column(db.Integer)
    counter_attacks = db.Column(db.Integer)
    runs_p100_actions = db.Column(db.Float)
    passes_p100_actions = db.Column(db.Float)
    average_x = db.Column(db.Float)
    average_y = db.Column(db.Float)
    average_shot_distance = db.Column(db.Float)
    scoring_contribution_p90 = db.Column(db.Float)
    counterpressing_recoveries_low_p90 = db.Column(db.Float)
    counterpressing_recoveries_mid_p90 = db.Column(db.Float)
    counterpressing_recoveries_high_p90 = db.Column(db.Float)
    recoveries_low_p90 = db.Column(db.Float)
    recoveries_mid_p90 = db.Column(db.Float)
    recoveries_high_p90 = db.Column(db.Float)
    infractions_low_p90 = db.Column(db.Float)
    infractions_mid_p90 = db.Column(db.Float)
    infractions_high_p90 = db.Column(db.Float)
    padj_interceptions_p90 = db.Column(db.Float)
    padj_aerial_duels_p90 = db.Column(db.Float)
    padj_sliding_tackles_p90 = db.Column(db.Float)
    padj_clearance_p90 = db.Column(db.Float)
    padj_offensive_duels_p90 = db.Column(db.Float)
    padj_defensive_duels_p90 = db.Column(db.Float)
    padj_recoveries_low_p90 = db.Column(db.Float)
    padj_recoveries_mid_p90 = db.Column(db.Float)
    padj_recoveries_high_p90 = db.Column(db.Float)
    padj_loose_ball_duels_p90 = db.Column(db.Float)
    padj_ball_recoveries_p90 = db.Column(db.Float)
    assists_p90 = db.Column(db.Float)
    second_assists_p90 = db.Column(db.Float)
    third_assists_p90 = db.Column(db.Float)
    key_passes_p90 = db.Column(db.Float)
    passes_to_final_third_p90 = db.Column(db.Float)
    progressive_passes_p90 = db.Column(db.Float)
    forward_passes_p90 = db.Column(db.Float)
    passes_p90 = db.Column(db.Float)
    lateral_passes_p90 = db.Column(db.Float)
    back_passes_p90 = db.Column(db.Float)
    long_passes_p90 = db.Column(db.Float)
    linkup_plays_p90 = db.Column(db.Float)
    missed_balls_p90 = db.Column(db.Float)
    crosses_p90 = db.Column(db.Float)
    progressive_run_p90 = db.Column(db.Float)
    accelerations_p90 = db.Column(db.Float)
    interceptions_p90 = db.Column(db.Float)
    sliding_tackles_p90 = db.Column(db.Float)
    aerial_duels_p90 = db.Column(db.Float)
    clearances_p90 = db.Column(db.Float)
    offensive_duels_p90 = db.Column(db.Float)
    defensive_duels_p90 = db.Column(db.Float)
    loose_ball_duels_p90 = db.Column(db.Float)
    ball_recoveries_p90 = db.Column(db.Float)
    shots_blocked_p90 = db.Column(db.Float)
    successful_passes_low_p90 = db.Column(db.Float)
    successful_passes_mid_p90 = db.Column(db.Float)
    successful_passes_high_p90 = db.Column(db.Float)
    short_or_medium_passes_p90 = db.Column(db.Float)
    pressing_duels_p90 = db.Column(db.Float)
    passes_to_penalty_area_p90 = db.Column(db.Float)
    deep_completions_p90 = db.Column(db.Float)
    head_passes_p90 = db.Column(db.Float)
    deep_completed_crosses_p90 = db.Column(db.Float)
    free_kick_crosses_p90 = db.Column(db.Float)
    dribble_defences_p90 = db.Column(db.Float)
    shots_by_left_p90 = db.Column(db.Float)
    shots_by_right_p90 = db.Column(db.Float)
    shots_by_head_or_other_p90 = db.Column(db.Float)
    xg_p90 = db.Column(db.Float)
    xg_per_shot = db.Column(db.Float)
    non_penalty_goals_p90 = db.Column(db.Float)
    goals_by_head_or_other_p90 = db.Column(db.Float)
    opp_half_touches_p90 = db.Column(db.Float)
    open_play_shots_p90 = db.Column(db.Float)
    shots_p90 = db.Column(db.Float)
    big_chances_p90 = db.Column(db.Float)
    shots_after_long_pass_p90 = db.Column(db.Float)
    shots_after_cross_p90 = db.Column(db.Float)
    shots_after_through_pass_p90 = db.Column(db.Float)
    own_shots_p90 = db.Column(db.Float)
    non_fk_outside_box_shots_p90 = db.Column(db.Float)
    non_p_dz_shots_p90 = db.Column(db.Float)
    long_balls_p90 = db.Column(db.Float)
    long_balls_received_p90 = db.Column(db.Float)
    crosses_into_small_box_p90 = db.Column(db.Float)
    received_passes_into_box_p90 = db.Column(db.Float)
    op_xA_p90 = db.Column(db.Float)
    op_second_xA_p90 = db.Column(db.Float)
    op_third_xA_p90 = db.Column(db.Float)
    op_xg_build_up_p90 = db.Column(db.Float)
    op_xg_chain_p90 = db.Column(db.Float)
    take_ons_p90 = db.Column(db.Float)
    spaces_p90 = db.Column(db.Float)
    take_ons_in_final_third_p90 = db.Column(db.Float)
    take_ons_in_box_p90 = db.Column(db.Float)
    danger_zone_entries_p90 = db.Column(db.Float)
    dispossessed_p90 = db.Column(db.Float)
    free_kick_shots_p90 = db.Column(db.Float)
    lost_balls_opp_half_p90 = db.Column(db.Float)
    lost_balls_own_half_p90 = db.Column(db.Float)
    lost_balls_leading_to_opp_shot_p90 = db.Column(db.Float)
    sp_xG_p90 = db.Column(db.Float)
    sp_xA_p90 = db.Column(db.Float)
    xG_from_corner_p90 = db.Column(db.Float)
    high_crosses_p90 = db.Column(db.Float)
    low_crosses_p90 = db.Column(db.Float)
    blocked_crosses_p90 = db.Column(db.Float)
    touches_in_box_p90 = db.Column(db.Float)
    successful_passes_to_final_third_percentage = db.Column(db.Float)
    passes_runs_percentage = db.Column(db.Float)
    spaces_total_runs_percentage = db.Column(db.Float)
    xA_per_key_passes = db.Column(db.Float)
    successful_take_ons_in_box_percentage = db.Column(db.Float)
    successful_crosses_percentage = db.Column(db.Float)
    successful_dribbles_percentage = db.Column(db.Float)
    successful_take_ons_percentage = db.Column(db.Float)
    successful_spaces_percentage = db.Column(db.Float)
    long_balls_completion = db.Column(db.Float)
    opp_half_touches_ratio = db.Column(db.Float)
    successful_crosses_into_small_box_percentage = db.Column(db.Float)
    accurate_dz_shots_percentage = db.Column(db.Float)
    successful_progressive_passes_percentage = db.Column(db.Float)
    won_dribble_defences_percentage = db.Column(db.Float)
    dz_scoring_percentage = db.Column(db.Float)
    own_shots_percentage = db.Column(db.Float)
    scoring_percentage = db.Column(db.Float)
    successful_long_passes_percentage = db.Column(db.Float)
    conversion_rate = db.Column(db.Float)
    successful_head_passes_percentage = db.Column(db.Float)
    successful_passes_to_penalty_area_percentage = db.Column(db.Float)
    loose_ball_duels_won_percentage = db.Column(db.Float)
    successful_short_or_medium_passes_percentage = db.Column(db.Float)
    offensive_duels_won_percentage = db.Column(db.Float)
    defensive_duels_won_percentage = db.Column(db.Float)
    successful_sliding_tackles_percentage = db.Column(db.Float)
    air_challenges_completion = db.Column(db.Float)
    patch_p90 = db.Column(db.Float)
    counterpressing_recoveries_p90 = db.Column(db.Float)
    lost_dribble_defences_p90 = db.Column(db.Float)
    final_third_touches_p90 = db.Column(db.Float)
    infractions_p90 = db.Column(db.Float)
    shots_by_primary_foot_percentage = db.Column(db.Float)
    yellow_cards_p90 = db.Column(db.Float)
    padj_offensive_ground_duels_p90 = db.Column(db.Float)
    padj_defensive_ground_duels_p90 = db.Column(db.Float)
    lost_balls_p90 = db.Column(db.Float)
    dribbles_p90 = db.Column(db.Float)
    returned_possessions_p90 = db.Column(db.Float)
    successful_defensive_ground_duels_percentage = db.Column(db.Float)
    successful_offensive_ground_duels_percentage = db.Column(db.Float)
    passes_into_final_third_p90 = db.Column(db.Float)
    received_passes_into_box_p90 = db.Column(db.Float)
    final_third_entries_p90 = db.Column(db.Float)
    padj_returned_possession_p90 = db.Column(db.Float)
    padj_counterpressing_recoveries_p90 = db.Column(db.Float)
    padj_patch_p90 = db.Column(db.Float)
    smart_and_through_passes_p90 = db.Column(db.Float)
    smart_passes_p90 = db.Column(db.Float)
    successful_smart_passes_percentage = db.Column(db.Float)
    through_passes_p90 = db.Column(db.Float)
    successful_through_passes_percentage = db.Column(db.Float)
    successful_smart_and_through_passes_percentage = db.Column(db.Float)
    red_cards_p90 = db.Column(db.Float)
    op_xG_p90 = db.Column(db.Float)
    xg_total = db.Column(db.Float)
    op_xG = db.Column(db.Float)
    np_xG_p90 = db.Column(db.Float)
    opp_half_left_wp_percentage = db.Column(db.Float)
    opp_half_mid_wp_percentage = db.Column(db.Float)
    opp_half_right_wp_percentage = db.Column(db.Float)
    own_half_left_wp_percentage = db.Column(db.Float)
    own_half_mid_wp_percentage = db.Column(db.Float)
    own_half_right_wp_percentage = db.Column(db.Float)
    xA_p90 = db.Column(db.Float)
    xA = db.Column(db.Float)
    padj_lost_dribble_defences_p90 = db.Column(db.Float)


class WySeasonPercentiles(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    primary_position_code = db.Column(db.String)
    type = db.Column(db.String)
    percentile = db.Column(db.String)
    minutes = db.Column(db.Integer)
    number_of_events = db.Column(db.Integer)
    runs_p100_actions = db.Column(db.Float)
    passes_p100_actions = db.Column(db.Float)
    average_x = db.Column(db.Float)
    average_y = db.Column(db.Float)
    average_shot_distance = db.Column(db.Float)
    scoring_contribution_p90 = db.Column(db.Float)
    counterpressing_recoveries_low_p90 = db.Column(db.Float)
    counterpressing_recoveries_mid_p90 = db.Column(db.Float)
    counterpressing_recoveries_high_p90 = db.Column(db.Float)
    recoveries_low_p90 = db.Column(db.Float)
    recoveries_mid_p90 = db.Column(db.Float)
    recoveries_high_p90 = db.Column(db.Float)
    infractions_low_p90 = db.Column(db.Float)
    infractions_mid_p90 = db.Column(db.Float)
    infractions_high_p90 = db.Column(db.Float)
    padj_interceptions_p90 = db.Column(db.Float)
    padj_aerial_duels_p90 = db.Column(db.Float)
    padj_sliding_tackles_p90 = db.Column(db.Float)
    padj_clearance_p90 = db.Column(db.Float)
    padj_offensive_duels_p90 = db.Column(db.Float)
    padj_defensive_duels_p90 = db.Column(db.Float)
    padj_recoveries_low_p90 = db.Column(db.Float)
    padj_recoveries_mid_p90 = db.Column(db.Float)
    padj_recoveries_high_p90 = db.Column(db.Float)
    padj_loose_ball_duels_p90 = db.Column(db.Float)
    padj_ball_recoveries_p90 = db.Column(db.Float)
    assists_p90 = db.Column(db.Float)
    second_assists_p90 = db.Column(db.Float)
    third_assists_p90 = db.Column(db.Float)
    key_passes_p90 = db.Column(db.Float)
    passes_to_final_third_p90 = db.Column(db.Float)
    progressive_passes_p90 = db.Column(db.Float)
    forward_passes_p90 = db.Column(db.Float)
    passes_p90 = db.Column(db.Float)
    lateral_passes_p90 = db.Column(db.Float)
    back_passes_p90 = db.Column(db.Float)
    long_passes_p90 = db.Column(db.Float)
    linkup_plays_p90 = db.Column(db.Float)
    missed_balls_p90 = db.Column(db.Float)
    crosses_p90 = db.Column(db.Float)
    progressive_run_p90 = db.Column(db.Float)
    accelerations_p90 = db.Column(db.Float)
    interceptions_p90 = db.Column(db.Float)
    sliding_tackles_p90 = db.Column(db.Float)
    aerial_duels_p90 = db.Column(db.Float)
    clearances_p90 = db.Column(db.Float)
    offensive_duels_p90 = db.Column(db.Float)
    defensive_duels_p90 = db.Column(db.Float)
    loose_ball_duels_p90 = db.Column(db.Float)
    ball_recoveries_p90 = db.Column(db.Float)
    shots_blocked_p90 = db.Column(db.Float)
    successful_passes_low_p90 = db.Column(db.Float)
    successful_passes_mid_p90 = db.Column(db.Float)
    successful_passes_high_p90 = db.Column(db.Float)
    short_or_medium_passes_p90 = db.Column(db.Float)
    pressing_duels_p90 = db.Column(db.Float)
    passes_to_penalty_area_p90 = db.Column(db.Float)
    deep_completions_p90 = db.Column(db.Float)
    head_passes_p90 = db.Column(db.Float)
    deep_completed_crosses_p90 = db.Column(db.Float)
    free_kick_crosses_p90 = db.Column(db.Float)
    dribble_defences_p90 = db.Column(db.Float)
    shots_by_left_p90 = db.Column(db.Float)
    shots_by_right_p90 = db.Column(db.Float)
    shots_by_head_or_other_p90 = db.Column(db.Float)
    xg_p90 = db.Column(db.Float)
    xg_per_shot = db.Column(db.Float)
    non_penalty_goals_p90 = db.Column(db.Float)
    goals_by_head_or_other_p90 = db.Column(db.Float)
    opp_half_touches_p90 = db.Column(db.Float)
    open_play_shots_p90 = db.Column(db.Float)
    shots_p90 = db.Column(db.Float)
    big_chances_p90 = db.Column(db.Float)
    shots_after_long_pass_p90 = db.Column(db.Float)
    shots_after_cross_p90 = db.Column(db.Float)
    shots_after_through_pass_p90 = db.Column(db.Float)
    own_shots_p90 = db.Column(db.Float)
    non_fk_outside_box_shots_p90 = db.Column(db.Float)
    non_p_dz_shots_p90 = db.Column(db.Float)
    long_balls_p90 = db.Column(db.Float)
    long_balls_received_p90 = db.Column(db.Float)
    crosses_into_small_box_p90 = db.Column(db.Float)
    received_passes_into_box_p90 = db.Column(db.Float)
    op_xA_p90 = db.Column(db.Float)
    op_second_xA_p90 = db.Column(db.Float)
    op_third_xA_p90 = db.Column(db.Float)
    op_xg_build_up_p90 = db.Column(db.Float)
    op_xg_chain_p90 = db.Column(db.Float)
    take_ons_p90 = db.Column(db.Float)
    spaces_p90 = db.Column(db.Float)
    take_ons_in_final_third_p90 = db.Column(db.Float)
    take_ons_in_box_p90 = db.Column(db.Float)
    danger_zone_entries_p90 = db.Column(db.Float)
    dispossessed_p90 = db.Column(db.Float)
    free_kick_shots_p90 = db.Column(db.Float)
    lost_balls_opp_half_p90 = db.Column(db.Float)
    lost_balls_own_half_p90 = db.Column(db.Float)
    lost_balls_leading_to_opp_shot_p90 = db.Column(db.Float)
    lost_balls_p90 = db.Column(db.Float)
    sp_xG_p90 = db.Column(db.Float)
    sp_xA_p90 = db.Column(db.Float)
    xG_from_corner_p90 = db.Column(db.Float)
    high_crosses_p90 = db.Column(db.Float)
    low_crosses_p90 = db.Column(db.Float)
    blocked_crosses_p90 = db.Column(db.Float)
    touches_in_box_p90 = db.Column(db.Float)
    successful_passes_to_final_third_percentage = db.Column(db.Float)
    passes_runs_percentage = db.Column(db.Float)
    spaces_total_runs_percentage = db.Column(db.Float)
    xA_per_key_passes = db.Column(db.Float)
    successful_take_ons_in_box_percentage = db.Column(db.Float)
    successful_crosses_percentage = db.Column(db.Float)
    successful_dribbles_percentage = db.Column(db.Float)
    successful_take_ons_percentage = db.Column(db.Float)
    successful_spaces_percentage = db.Column(db.Float)
    long_balls_completion = db.Column(db.Float)
    opp_half_touches_ratio = db.Column(db.Float)
    successful_crosses_into_small_box_percentage = db.Column(db.Float)
    accurate_dz_shots_percentage = db.Column(db.Float)
    successful_progressive_passes_percentage = db.Column(db.Float)
    won_dribble_defences_percentage = db.Column(db.Float)
    dz_scoring_percentage = db.Column(db.Float)
    own_shots_percentage = db.Column(db.Float)
    scoring_percentage = db.Column(db.Float)
    successful_long_passes_percentage = db.Column(db.Float)
    conversion_rate = db.Column(db.Float)
    successful_head_passes_percentage = db.Column(db.Float)
    successful_passes_to_penalty_area_percentage = db.Column(db.Float)
    loose_ball_duels_won_percentage = db.Column(db.Float)
    successful_short_or_medium_passes_percentage = db.Column(db.Float)
    offensive_duels_won_percentage = db.Column(db.Float)
    defensive_duels_won_percentage = db.Column(db.Float)
    successful_sliding_tackles_percentage = db.Column(db.Float)
    air_challenges_completion = db.Column(db.Float)
    patch_p90 = db.Column(db.Float)
    counterpressing_recoveries_p90 = db.Column(db.Float)
    lost_dribble_defences_p90 = db.Column(db.Float)
    final_third_touches_p90 = db.Column(db.Float)
    infractions_p90 = db.Column(db.Float)
    shots_by_primary_foot_percentage = db.Column(db.Float)
    yellow_cards_p90 = db.Column(db.Float)
    padj_offensive_ground_duels_p90 = db.Column(db.Float)
    padj_defensive_ground_duels_p90 = db.Column(db.Float)
    lost_balls_p90 = db.Column(db.Float)
    dribbles_p90 = db.Column(db.Float)
    returned_possessions_p90 = db.Column(db.Float)
    passes_into_final_third_p90 = db.Column(db.Float)
    received_passes_into_box_p90 = db.Column(db.Float)
    final_third_entries_p90 = db.Column(db.Float)
    successful_defensive_ground_duels_percentage = db.Column(db.Float)
    successful_offensive_ground_duels_percentage = db.Column(db.Float)
    padj_returned_possession_p90 = db.Column(db.Float)
    padj_counterpressing_recoveries_p90 = db.Column(db.Float)
    padj_patch_p90 = db.Column(db.Float)
    smart_and_through_passes_p90 = db.Column(db.Float)
    smart_passes_p90 = db.Column(db.Float)
    successful_smart_passes_percentage = db.Column(db.Float)
    through_passes_p90 = db.Column(db.Float)
    successful_through_passes_percentage = db.Column(db.Float)
    successful_smart_and_through_passes_percentage = db.Column(db.Float)
    red_cards_p90 = db.Column(db.Float)
    op_xG_p90 = db.Column(db.Float)
    np_xG_p90 = db.Column(db.Float)
    xA_p90 = db.Column(db.Float)
    padj_lost_dribble_defences_p90 = db.Column(db.Float)



class JSONWyShotsMatchTeam(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    match_wyid = db.Column(db.Integer)
    team_wyid = db.Column(db.Integer)
    team_name = db.Column(db.String)
    other_team_wyid = db.Column(db.Integer)
    json = db.Column(db.String)

    def __init__(self):
        pass


class JSONWyShotsSeasonPlayer(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    team_wyid = db.Column(db.Integer)
    player_wyid = db.Column(db.Integer)
    player_name = db.Column(db.String)
    json = db.Column(db.String)

    def __init__(self):
        pass

class JSONWyPassesZonesMatchTeam(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_instatid = db.Column(db.Integer)
    season = db.Column(db.String)
    match_instatid = db.Column(db.Integer)
    team_instatid = db.Column(db.Integer)
    json = db.Column(db.String)

    def __init__(self):
        pass

class JSONWyPassesMatchTeam(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    match_wyid = db.Column(db.Integer)
    team_wyid = db.Column(db.Integer)
    json = db.Column(db.String)

    def __init__(self):
        pass

class JSONWyPassesMatchPlayer(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    player_wyid = db.Column(db.Integer)
    player_name = db.Column(db.String)
    league_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    match_wyid = db.Column(db.Integer)
    team_wyid = db.Column(db.Integer)
    json = db.Column(db.String)

    def __init__(self):
        pass


class JSONWyPassingCentersMatchTeam(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    match_wyid = db.Column(db.Integer)
    team_wyid = db.Column(db.Integer)
    passes = db.Column(db.String)
    players = db.Column(db.String)

    def __init__(self):
        pass


class SparkWyPassesSonarSeasonPlayer(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    team_wyid = db.Column(db.Integer)
    player_wyid = db.Column(db.Integer)
    acc_passes = db.Column(db.String)
    inacc_passes = db.Column(db.String)
    acc_passes_total = db.Column(db.Integer)
    inacc_passes_total = db.Column(db.Integer)

    def __init__(self):
        pass


class SparkWyModelsSeasonTeam(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    league_name = db.Column(db.String)
    team_wyid = db.Column(db.Integer)
    season = db.Column(db.String)
    team_name = db.Column(db.String)
    xG_after_corner = db.Column(db.Float)
    xG_after_free_kick = db.Column(db.Float)
    xG_after_throw_in = db.Column(db.Float)
    minutes = db.Column(db.Integer)
    op_shots = db.Column(db.Float)
    op_xG = db.Column(db.Float)
    maintenance = db.Column(db.Float)
    sustained_threat = db.Column(db.Float)
    counter_attacks = db.Column(db.Float)
    fast_tempo = db.Column(db.Float)
    ppda = db.Column(db.Float)
    op_xG_per_shot = db.Column(db.Float)
    avg_def_line = db.Column(db.Float)
    opp_half_left_wp_percentage = db.Column(db.Float)
    opp_half_mid_wp_percentage = db.Column(db.Float)
    opp_half_right_wp_percentage = db.Column(db.Float)
    own_half_left_wp_percentage = db.Column(db.Float)
    own_half_mid_wp_percentage = db.Column(db.Float)
    own_half_right_wp_percentage = db.Column(db.Float)
    returned_possession_percentage = db.Column(db.Float)
    pressed_sequence_percentage = db.Column(db.Float)
    possession_percentage = db.Column(db.Float)
    attack_speed = db.Column(db.Float)
    passes_per_possession = db.Column(db.Float)
    xG_after_corner_p90 = db.Column(db.Float)
    xG_after_throw_in_p90 = db.Column(db.Float)
    xG_after_free_kick_p90 = db.Column(db.Float)
    maintenance_p90 = db.Column(db.Float)
    sustained_threat_p90 = db.Column(db.Float)
    counter_attacks_p90 = db.Column(db.Float)
    fast_tempo_p90 = db.Column(db.Float)


class SparkWyModelsMatchTeam(db.Model, CRUD):
    id = db.Column(db.Integer, primary_key=True)
    league_wyid = db.Column(db.Integer)
    season_wyid = db.Column(db.Integer)
    match_wyid = db.Column(db.Integer)
    team_wyid = db.Column(db.Integer)
    defensive_actions_low = db.Column(db.Float)
    defensive_actions_mid = db.Column(db.Float)
    defensive_actions_high = db.Column(db.Float)
    op_shots = db.Column(db.Float)
    op_xG = db.Column(db.Float)
    season = db.Column(db.String)
    team_name = db.Column(db.String)
    ppda = db.Column(db.Float)
    other_teams_seconds_in_possession = db.Column(db.Float)
    build_up_seconds = db.Column(db.Float)
    xG_after_corner = db.Column(db.Float)
    xG_after_free_kick = db.Column(db.Float)
    xG_after_throw_in = db.Column(db.Float)
    maintenance = db.Column(db.Float)
    sustained_threat = db.Column(db.Float)
    counter_attacks = db.Column(db.Float)
    fast_tempo = db.Column(db.Float)
    minutes = db.Column(db.Float)
    match_count = db.Column(db.Float)
    op_xG_per_shot = db.Column(db.Float)
    avg_def_line = db.Column(db.Float)
    wp_opp_half_count = db.Column(db.Float)
    wp_own_half_count = db.Column(db.Float)
    opp_half_left_wp_percentage = db.Column(db.Float)
    opp_half_mid_wp_percentage = db.Column(db.Float)
    opp_half_right_wp_percentage = db.Column(db.Float)
    own_half_left_wp_percentage = db.Column(db.Float)
    own_half_mid_wp_percentage = db.Column(db.Float)
    own_half_right_wp_percentage = db.Column(db.Float)
    returned_possession_percentage = db.Column(db.Float)
    pressed_sequence_percentage = db.Column(db.Float)
    possession_percentage = db.Column(db.Float)
    attack_speed = db.Column(db.Float)
    passes_per_possession = db.Column(db.Float)
    xG_after_corner_p90 = db.Column(db.Float)
    xG_after_throw_in_p90 = db.Column(db.Float)
    xG_after_free_kick_p90 = db.Column(db.Float)
    sustained_threat_p90 = db.Column(db.Float)
    counter_attacks_p90 = db.Column(db.Float)
    fast_tempo_p90 = db.Column(db.Float)
    possessions_seconds_total = db.Column(db.Integer)
    enemy_passes = db.Column(db.Integer)
    defensive_actions_count = db.Column(db.Integer)
    lost_possessions = db.Column(db.Integer)
    enemy_possessions_count = db.Column(db.Integer)
    seconds_in_possession = db.Column(db.Integer)
    passes = db.Column(db.Integer)
    maintenance_p90 = db.Column(db.Float)
