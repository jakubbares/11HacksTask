from marshmallow_jsonapi import Schema, fields
from marshmallow import validate
import json
not_blank = validate.Length(min=1, error='Field cannot be blank')


class WyPlayerSchema(Schema):
    id = fields.Integer(dump_only=True)
    wyid = fields.Integer()
    name = fields.String()
    height = fields.Integer()
    weight = fields.Integer()
    birthday = fields.String()
    nationality = fields.String()
    position = fields.String()
    foot = fields.String()
    team_wyid = fields.Integer()
    league_wyid = fields.Integer()

    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'

class WyTeamSchema(Schema):
    id = fields.Integer(dump_only=True)
    wyid = fields.Integer()
    league_wyid = fields.Integer()
    name = fields.String()
    city = fields.String()
    country = fields.String()

    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'

class WyMatchSchema(Schema):
    id = fields.Integer(dump_only=True)
    wyid = fields.Integer()
    match_date = fields.String()
    league_wyid = fields.Integer()
    season_wyid = fields.Integer()
    round_wyid = fields.Integer()
    week = fields.Integer()
    home_team_wyid = fields.Integer()
    home_team_name = fields.String()
    guest_team_wyid = fields.Integer()
    guest_team_name = fields.String()
    hero_name = fields.String()
    hero_wyid = fields.Integer()
    opponent_name = fields.String()
    opponent_wyid = fields.Integer()
    team_wyid = fields.Integer()
    score = fields.String()
    season = fields.String()

    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'

class SparkWyModelsMatchPlayerSchema(Schema):
    id = fields.Integer(dump_only=True)
    league_wyid = fields.Integer()
    league_tier = fields.Integer()
    league_name = fields.String()
    country_name = fields.String()
    season_wyid = fields.Integer()
    season = fields.String()
    match_wyid = fields.Integer()
    team_wyid = fields.Integer()
    team_name = fields.String()
    player_wyid = fields.Integer()
    player_name = fields.String()
    nationality = fields.String()
    birthday = fields.Date()
    height = fields.Integer()
    weight = fields.Integer()
    primary_position_name = fields.String()
    primary_position_code = fields.String()
    primary_position_percentage = fields.Decimal()
    secondary_position_name = fields.String()
    secondary_position_code = fields.String()
    secondary_position_percentage = fields.Decimal()
    third_position_name = fields.String()
    third_position_code = fields.String()
    third_position_percentage = fields.Decimal()
    foot = fields.String()
    matches_count = fields.Integer()
    minutes = fields.Integer()
    shots = fields.Integer()
    touch_in_box = fields.Integer()
    offsides = fields.Integer()
    penalties = fields.Integer()
    yellow_cards = fields.Integer()
    red_cards = fields.Integer()
    goals = fields.Integer()
    assists = fields.Integer()
    passes = fields.Integer()
    runs = fields.Integer()
    buildup = fields.Integer()
    maintenance = fields.Integer()
    sustained_threat = fields.Integer()
    fast_tempo = fields.Integer()
    counter_attacks = fields.Integer()
    shots_by_primary_foot_percentage = fields.Decimal()
    xg_total = fields.Decimal()
    runs_p100_actions = fields.Decimal()
    passes_p100_actions = fields.Decimal()
    average_x = fields.Decimal()
    average_y = fields.Decimal()
    average_shot_distance = fields.Decimal()
    scoring_contribution_p90 = fields.Decimal()
    counterpressing_recoveries_low_p90 = fields.Decimal()
    counterpressing_recoveries_mid_p90 = fields.Decimal()
    counterpressing_recoveries_high_p90 = fields.Decimal()
    recoveries_low_p90 = fields.Decimal()
    recoveries_mid_p90 = fields.Decimal()
    recoveries_high_p90 = fields.Decimal()
    infractions_low_p90 = fields.Decimal()
    infractions_mid_p90 = fields.Decimal()
    infractions_high_p90 = fields.Decimal()
    padj_interceptions_p90 = fields.Decimal()
    padj_aerial_duels_p90 = fields.Decimal()
    padj_sliding_tackles_p90 = fields.Decimal()
    padj_clearance_p90 = fields.Decimal()
    padj_offensive_duels_p90 = fields.Decimal()
    padj_defensive_duels_p90 = fields.Decimal()
    assists_p90 = fields.Decimal()
    second_assists_p90 = fields.Decimal()
    third_assists_p90 = fields.Decimal()
    key_passes_p90 = fields.Decimal()
    passes_to_final_third_p90 = fields.Decimal()
    progressive_passes_p90 = fields.Decimal()
    forward_passes_p90 = fields.Decimal()
    lateral_passes_p90 = fields.Decimal()
    back_passes_p90 = fields.Decimal()
    linkup_plays_p90 = fields.Decimal()
    long_passes_p90 = fields.Decimal()
    missed_balls_p90 = fields.Decimal()
    crosses_p90 = fields.Decimal()
    progressive_run_p90 = fields.Decimal()
    accelerations_p90 = fields.Decimal()
    interceptions_p90 = fields.Decimal()
    sliding_tackles_p90 = fields.Decimal()
    aerial_duels_p90 = fields.Decimal()
    clearances_p90 = fields.Decimal()
    offensive_duels_p90 = fields.Decimal()
    defensive_duels_p90 = fields.Decimal()
    loose_ball_duels_p90 = fields.Decimal()
    ball_recoveries_p90 = fields.Decimal()
    padj_loose_ball_duels_p90 = fields.Decimal()
    shots_blocked_p90 = fields.Decimal()
    successful_passes_low_p90 = fields.Decimal()
    successful_passes_mid_p90 = fields.Decimal()
    successful_passes_high_p90 = fields.Decimal()
    short_or_medium_passes_p90 = fields.Decimal()
    padj_recoveries_low_p90 = fields.Decimal()
    padj_recoveries_mid_p90 = fields.Decimal()
    padj_recoveries_high_p90 = fields.Decimal()
    pressing_duels_p90 = fields.Decimal()
    passes_to_penalty_area_p90 = fields.Decimal()
    deep_completions_p90 = fields.Decimal()
    head_passes_p90 = fields.Decimal()
    deep_completed_crosses_p90 = fields.Decimal()
    free_kick_crosses_p90 = fields.Decimal()
    dribble_defences_p90 = fields.Decimal()
    lost_dribble_defences_p90 = fields.Decimal()
    shots_by_left_p90 = fields.Decimal()
    shots_by_right_p90 = fields.Decimal()
    shots_by_head_or_other_p90 = fields.Decimal()
    xg_p90 = fields.Decimal()
    xg_per_shot = fields.Decimal()
    non_penalty_goals_p90 = fields.Decimal()
    non_penalty_goals = fields.Integer()
    goals_by_head_or_other = fields.Integer()
    goals_by_head_or_other_p90 = fields.Decimal()
    opp_half_touches_p90 = fields.Decimal()
    open_play_shots_p90 = fields.Decimal()
    big_chances_p90 = fields.Decimal()
    shots_after_long_pass_p90 = fields.Decimal()
    shots_after_cross_p90 = fields.Decimal()
    shots_after_through_pass_p90 = fields.Decimal()
    own_shots_p90 = fields.Decimal()
    non_fk_outside_box_shots_p90 = fields.Decimal()
    non_p_dz_shots_p90 = fields.Decimal()
    long_balls_p90 = fields.Decimal()
    long_balls_received_p90 = fields.Decimal()
    crosses_into_small_box_p90 = fields.Decimal()
    received_passes_into_box_p90 = fields.Decimal()
    op_xA_p90 = fields.Decimal()
    op_second_xA_p90 = fields.Decimal()
    op_third_xA_p90 = fields.Decimal()
    op_xg_build_up_p90 = fields.Decimal()
    op_xg_chain_p90 = fields.Decimal()
    take_ons_p90 = fields.Decimal()
    spaces_p90 = fields.Decimal()
    take_ons_in_final_third_p90 = fields.Decimal()
    take_ons_in_box_p90 = fields.Decimal()
    danger_zone_entries_p90 = fields.Decimal()
    dispossessed_p90 = fields.Decimal()
    free_kick_shots_p90 = fields.Decimal()
    lost_balls_opp_half_p90 = fields.Decimal()
    lost_balls_own_half_p90 = fields.Decimal()
    lost_balls_leading_to_opp_shot_p90 = fields.Decimal()
    sp_xG_p90 = fields.Decimal()
    sp_xA_p90 = fields.Decimal()
    xG_from_corner_p90 = fields.Decimal()
    high_crosses_p90 = fields.Decimal()
    low_crosses_p90 = fields.Decimal()
    blocked_crosses_p90 = fields.Decimal()
    touch_in_box_p90 = fields.Decimal()
    successful_passes_to_final_third_percentage = fields.Decimal()
    passes_runs_percentage = fields.Decimal()
    spaces_total_runs_percentage = fields.Decimal()
    xa_per_key_passes = fields.Decimal()
    successful_take_ons_in_box_percentage = fields.Decimal()
    successful_crosses_percentage = fields.Decimal()
    successful_dribbles_percentage = fields.Decimal()
    successful_take_ons_percentage = fields.Decimal()
    successful_spaces_percentage = fields.Decimal()
    long_balls_completion = fields.Decimal()
    opp_half_touches_ratio = fields.Decimal()
    successful_crosses_into_small_box_percentage = fields.Decimal()
    accurate_dz_shots_percentage = fields.Decimal()
    successful_progressive_passes_percentage = fields.Decimal()
    won_dribble_defences_percentage = fields.Decimal()
    dz_scoring_percentage = fields.Decimal()
    own_shots_percentage = fields.Decimal()
    scoring_percentage = fields.Decimal()
    successful_long_passes_percentage = fields.Decimal()
    conversion_rate = fields.Decimal()
    successful_head_passes_percentage = fields.Decimal()
    successful_passes_to_penalty_area_percentage = fields.Decimal()
    loose_ball_duels_won_percentage = fields.Decimal()
    short_or_medium_passes_percentage = fields.Decimal()
    offensive_duels_won_percentage = fields.Decimal()
    defensive_duels_won_percentage = fields.Decimal()
    successful_sliding_tackles_percentage = fields.Decimal()
    air_challenges_completion = fields.Decimal()
    patch_p90 = fields.Decimal()
    yellow_cards_p90 = fields.Decimal()
    red_cards_p90 = fields.Decimal()
    returned_possession_p90 = fields.Decimal()
    shots_p90 = fields.Decimal()
    passes_p90 = fields.Decimal()
    dribbles_p90 = fields.Decimal()
    lost_balls_p90 = fields.Decimal()
    padj_offensive_ground_duels_p90 = fields.Decimal()
    padj_defensive_ground_duels_p90 = fields.Decimal()
    counterpressing_recoveries_p90 = fields.Decimal()
    infractions_p90 = fields.Decimal()
    final_third_touches_p90 = fields.Decimal()
    passes_into_final_third_p90 = fields.Decimal()
    final_third_entries_p90 = fields.Decimal()
    buildup = fields.Integer()
    maintenance = fields.Integer()
    sustained_threat = fields.Integer()
    fast_tempo = fields.Integer()
    counter_attacks = fields.Integer()
    opp_half_left_wp_percentage = fields.Decimal()
    opp_half_mid_wp_percentage = fields.Decimal()
    opp_half_right_wp_percentage = fields.Decimal()
    own_half_left_wp_percentage = fields.Decimal()
    own_half_mid_wp_percentage = fields.Decimal()
    own_half_right_wp_percentage = fields.Decimal()
    successful_offensive_ground_duels_percentage = fields.Decimal()
    successful_defensive_ground_duels_percentage = fields.Decimal()
    padj_ball_recoveries_p90 = fields.Decimal()
    padj_patch_p90 = fields.Decimal()
    padj_returned_possession_p90 = fields.Decimal()
    padj_counterpressing_recoveries_p90 = fields.Decimal()
    number_of_events = fields.Integer()
    shot_distance_sum = fields.Decimal()
    won_dribble_defences = fields.Integer()
    smart_and_through_passes_p90 = fields.Decimal()
    smart_passes_p90 = fields.Decimal()
    through_passes_p90 = fields.Decimal()
    successful_smart_passes_percentage = fields.Decimal()
    successful_through_passes_percentage = fields.Decimal()
    dz_goals = fields.Integer()
    all_opp_half_wp_count = fields.Integer()
    all_own_half_wp_count = fields.Integer()
    offensive_ground_duels = fields.Integer()
    defensive_ground_duels = fields.Integer()
    successful_smart_and_through_passes_percentage = fields.Decimal()
    op_xG_p90 = fields.Decimal()
    np_xG_p90 = fields.Decimal()
    np_xG = fields.Decimal()
    touches_in_box = fields.Integer()
    opp_half_left_wp_percentage = fields.Decimal()
    opp_half_mid_wp_percentage = fields.Decimal()
    opp_half_right_wp_percentage = fields.Decimal()
    own_half_left_wp_percentage = fields.Decimal()
    own_half_mid_wp_percentage = fields.Decimal()
    own_half_right_wp_percentage = fields.Decimal()
    xA_p90 = fields.Decimal()
    xA = fields.Decimal()
    padj_lost_dribble_defences_p90 = fields.Decimal()


    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'

class SparkWyModelsSeasonPlayerSchema(Schema):
    id = fields.Integer()
    primary_position_code = fields.String()
    nationality = fields.String()
    height = fields.Integer()
    weight = fields.Integer()
    birthday = fields.Date()
    league_wyid = fields.Integer()
    league_tier = fields.Integer()
    league_name = fields.String()
    season_wyid = fields.Integer()
    season = fields.String()
    team_wyid = fields.Integer()
    team_name = fields.String()
    player_wyid = fields.Integer()
    player_name = fields.String()
    minutes = fields.Integer()
    matches_count = fields.Integer()
    goals = fields.Integer()
    shots = fields.Integer()
    passes = fields.Integer()
    scoring_contribution = fields.Decimal()
    offsides = fields.Integer()
    assists = fields.Integer()
    penalties = fields.Integer()
    yellow_cards = fields.Integer()
    red_cards = fields.Integer()
    runs = fields.Integer()
    number_of_events = fields.Integer()
    buildup = fields.Integer()
    maintenance = fields.Integer()
    sustained_threat = fields.Integer()
    fast_tempo = fields.Integer()
    counter_attacks = fields.Integer()
    runs_p100_actions = fields.Decimal()
    passes_p100_actions = fields.Decimal()
    average_x = fields.Decimal()
    average_y = fields.Decimal()
    average_shot_distance = fields.Decimal()
    scoring_contribution_p90 = fields.Decimal()
    counterpressing_recoveries_low_p90 = fields.Decimal()
    counterpressing_recoveries_mid_p90 = fields.Decimal()
    counterpressing_recoveries_high_p90 = fields.Decimal()
    recoveries_low_p90 = fields.Decimal()
    recoveries_mid_p90 = fields.Decimal()
    recoveries_high_p90 = fields.Decimal()
    infractions_low_p90 = fields.Decimal()
    infractions_mid_p90 = fields.Decimal()
    infractions_high_p90 = fields.Decimal()
    padj_interceptions_p90 = fields.Decimal()
    padj_aerial_duels_p90 = fields.Decimal()
    padj_sliding_tackles_p90 = fields.Decimal()
    padj_clearance_p90 = fields.Decimal()
    padj_offensive_duels_p90 = fields.Decimal()
    padj_defensive_duels_p90 = fields.Decimal()
    padj_recoveries_low_p90 = fields.Decimal()
    padj_recoveries_mid_p90 = fields.Decimal()
    padj_recoveries_high_p90 = fields.Decimal()
    padj_loose_ball_duels_p90 = fields.Decimal()
    padj_ball_recoveries_p90 = fields.Decimal()
    assists_p90 = fields.Decimal()
    second_assists_p90 = fields.Decimal()
    third_assists_p90 = fields.Decimal()
    key_passes_p90 = fields.Decimal()
    passes_to_final_third_p90 = fields.Decimal()
    progressive_passes_p90 = fields.Decimal()
    forward_passes_p90 = fields.Decimal()
    passes_p90 = fields.Decimal()
    lateral_passes_p90 = fields.Decimal()
    back_passes_p90 = fields.Decimal()
    long_passes_p90 = fields.Decimal()
    linkup_plays_p90 = fields.Decimal()
    missed_balls_p90 = fields.Decimal()
    crosses_p90 = fields.Decimal()
    progressive_run_p90 = fields.Decimal()
    accelerations_p90 = fields.Decimal()
    interceptions_p90 = fields.Decimal()
    sliding_tackles_p90 = fields.Decimal()
    aerial_duels_p90 = fields.Decimal()
    clearances_p90 = fields.Decimal()
    offensive_duels_p90 = fields.Decimal()
    defensive_duels_p90 = fields.Decimal()
    loose_ball_duels_p90 = fields.Decimal()
    ball_recoveries_p90 = fields.Decimal()
    shots_blocked_p90 = fields.Decimal()
    successful_passes_low_p90 = fields.Decimal()
    successful_passes_mid_p90 = fields.Decimal()
    successful_passes_high_p90 = fields.Decimal()
    short_or_medium_passes_p90 = fields.Decimal()
    pressing_duels_p90 = fields.Decimal()
    through_passes_p90 = fields.Decimal()
    passes_to_penalty_area_p90 = fields.Decimal()
    deep_completions_p90 = fields.Decimal()
    head_passes_p90 = fields.Decimal()
    deep_completed_crosses_p90 = fields.Decimal()
    free_kick_crosses_p90 = fields.Decimal()
    dribble_defences_p90 = fields.Decimal()
    shots_by_left_p90 = fields.Decimal()
    shots_by_right_p90 = fields.Decimal()
    shots_by_head_or_other_p90 = fields.Decimal()
    shots_p90 = fields.Decimal()
    xg_p90 = fields.Decimal()
    xg_per_shot = fields.Decimal()
    non_penalty_goals_p90 = fields.Decimal()
    goals_by_head_or_other_p90 = fields.Decimal()
    opp_half_touches_p90 = fields.Decimal()
    open_play_shots_p90 = fields.Decimal()
    big_chances_p90 = fields.Decimal()
    shots_after_long_pass_p90 = fields.Decimal()
    shots_after_cross_p90 = fields.Decimal()
    shots_after_through_pass_p90 = fields.Decimal()
    own_shots_p90 = fields.Decimal()
    non_fk_outside_box_shots_p90 = fields.Decimal()
    non_p_dz_shots_p90 = fields.Decimal()
    long_balls_p90 = fields.Decimal()
    long_balls_received_p90 = fields.Decimal()
    crosses_into_small_box_p90 = fields.Decimal()
    received_passes_into_box_p90 = fields.Decimal()
    op_xA_p90 = fields.Decimal()
    op_second_xA_p90 = fields.Decimal()
    op_third_xA_p90 = fields.Decimal()
    op_xg_build_up_p90 = fields.Decimal()
    op_xg_chain_p90 = fields.Decimal()
    take_ons_p90 = fields.Decimal()
    spaces_p90 = fields.Decimal()
    take_ons_in_final_third_p90 = fields.Decimal()
    take_ons_in_box_p90 = fields.Decimal()
    danger_zone_entries_p90 = fields.Decimal()
    dispossessed_p90 = fields.Decimal()
    free_kick_shots_p90 = fields.Decimal()
    lost_balls_opp_half_p90 = fields.Decimal()
    lost_balls_own_half_p90 = fields.Decimal()
    lost_balls_leading_to_opp_shot_p90 = fields.Decimal()
    sp_xG_p90 = fields.Decimal()
    sp_xA_p90 = fields.Decimal()
    xG_from_corner_p90 = fields.Decimal()
    high_crosses_p90 = fields.Decimal()
    low_crosses_p90 = fields.Decimal()
    blocked_crosses_p90 = fields.Decimal()
    touches_in_box_p90 = fields.Decimal()
    successful_passes_to_final_third_percentage = fields.Decimal()
    passes_runs_percentage = fields.Decimal()
    spaces_total_runs_percentage = fields.Decimal()
    xA_per_key_passes = fields.Decimal()
    successful_take_ons_in_box_percentage = fields.Decimal()
    successful_crosses_percentage = fields.Decimal()
    successful_dribbles_percentage = fields.Decimal()
    successful_take_ons_percentage = fields.Decimal()
    successful_spaces_percentage = fields.Decimal()
    long_balls_completion = fields.Decimal()
    opp_half_touches_ratio = fields.Decimal()
    successful_crosses_into_small_box_percentage = fields.Decimal()
    accurate_dz_shots_percentage = fields.Decimal()
    successful_progressive_passes_percentage = fields.Decimal()
    won_dribble_defences_percentage = fields.Decimal()
    dz_scoring_percentage = fields.Decimal()
    own_shots_percentage = fields.Decimal()
    scoring_percentage = fields.Decimal()
    successful_long_passes_percentage = fields.Decimal()
    conversion_rate = fields.Decimal()
    successful_head_passes_percentage = fields.Decimal()
    successful_passes_to_penalty_area_percentage = fields.Decimal()
    successful_through_passes_percentage = fields.Decimal()
    loose_ball_duels_won_percentage = fields.Decimal()
    successful_short_or_medium_passes_percentage = fields.Decimal()
    offensive_duels_won_percentage = fields.Decimal()
    defensive_duels_won_percentage = fields.Decimal()
    successful_sliding_tackles_percentage = fields.Decimal()
    air_challenges_completion = fields.Decimal()
    patch_p90 = fields.Decimal()
    counterpressing_recoveries_p90 = fields.Decimal()
    lost_dribble_defences_p90 = fields.Decimal()
    final_third_touches_p90 = fields.Decimal()
    infractions_p90 = fields.Decimal()
    shots_by_primary_foot_percentage = fields.Decimal()
    yellow_cards_p90 = fields.Decimal()
    padj_offensive_ground_duels_p90 = fields.Decimal()
    padj_defensive_ground_duels_p90 = fields.Decimal()
    lost_balls_p90 = fields.Decimal()
    dribbles_p90 = fields.Decimal()
    returned_possessions_p90 = fields.Decimal()
    successful_defensive_ground_duels_percentage = fields.Decimal()
    successful_offensive_ground_duels_percentage = fields.Decimal()
    passes_into_final_third_p90 = fields.Decimal()
    received_passes_into_box_p90 = fields.Decimal()
    final_third_entries_p90 = fields.Decimal()
    padj_returned_possession_p90 = fields.Decimal()
    padj_counterpressing_recoveries_p90 = fields.Decimal()
    padj_patch_p90 = fields.Decimal()
    smart_and_through_passes_p90 = fields.Decimal()
    smart_passes_p90 = fields.Decimal()
    successful_smart_passes_p90 = fields.Decimal()
    successful_smart_and_through_passes_percentage = fields.Decimal()
    red_cards_p90 = fields.Decimal()
    successful_smart_passes_percentage = fields.Decimal()
    xg_total = fields.Decimal()
    op_xG_p90 = fields.Decimal()
    op_xG = fields.Decimal()
    np_xG_p90 = fields.Decimal()
    np_xG = fields.Decimal()
    touches_in_box = fields.Integer()
    opp_half_left_wp_percentage = fields.Decimal()
    opp_half_mid_wp_percentage = fields.Decimal()
    opp_half_right_wp_percentage = fields.Decimal()
    own_half_left_wp_percentage = fields.Decimal()
    own_half_mid_wp_percentage = fields.Decimal()
    own_half_right_wp_percentage = fields.Decimal()
    xA_p90 = fields.Decimal()
    xA = fields.Decimal()
    padj_lost_dribble_defences_p90 = fields.Decimal()

# self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'




class WySeasonPercentilesSchema(Schema):
    id = fields.Integer()
    primary_position_code = fields.String()
    type = fields.String()
    percentile = fields.String()
    minutes = fields.Integer()
    number_of_events = fields.Integer()
    runs_p100_actions = fields.Decimal()
    passes_p100_actions = fields.Decimal()
    average_x = fields.Decimal()
    average_y = fields.Decimal()
    average_shot_distance = fields.Decimal()
    scoring_contribution_p90 = fields.Decimal()
    counterpressing_recoveries_low_p90 = fields.Decimal()
    counterpressing_recoveries_mid_p90 = fields.Decimal()
    counterpressing_recoveries_high_p90 = fields.Decimal()
    recoveries_low_p90 = fields.Decimal()
    recoveries_mid_p90 = fields.Decimal()
    recoveries_high_p90 = fields.Decimal()
    infractions_low_p90 = fields.Decimal()
    infractions_mid_p90 = fields.Decimal()
    infractions_high_p90 = fields.Decimal()
    padj_interceptions_p90 = fields.Decimal()
    padj_aerial_duels_p90 = fields.Decimal()
    padj_sliding_tackles_p90 = fields.Decimal()
    padj_clearance_p90 = fields.Decimal()
    padj_offensive_duels_p90 = fields.Decimal()
    padj_defensive_duels_p90 = fields.Decimal()
    padj_recoveries_low_p90 = fields.Decimal()
    padj_recoveries_mid_p90 = fields.Decimal()
    padj_recoveries_high_p90 = fields.Decimal()
    padj_loose_ball_duels_p90 = fields.Decimal()
    padj_ball_recoveries_p90 = fields.Decimal()
    assists_p90 = fields.Decimal()
    second_assists_p90 = fields.Decimal()
    third_assists_p90 = fields.Decimal()
    key_passes_p90 = fields.Decimal()
    passes_to_final_third_p90 = fields.Decimal()
    progressive_passes_p90 = fields.Decimal()
    forward_passes_p90 = fields.Decimal()
    passes_p90 = fields.Decimal()
    lateral_passes_p90 = fields.Decimal()
    back_passes_p90 = fields.Decimal()
    long_passes_p90 = fields.Decimal()
    linkup_plays_p90 = fields.Decimal()
    missed_balls_p90 = fields.Decimal()
    crosses_p90 = fields.Decimal()
    progressive_run_p90 = fields.Decimal()
    accelerations_p90 = fields.Decimal()
    interceptions_p90 = fields.Decimal()
    sliding_tackles_p90 = fields.Decimal()
    aerial_duels_p90 = fields.Decimal()
    clearances_p90 = fields.Decimal()
    offensive_duels_p90 = fields.Decimal()
    defensive_duels_p90 = fields.Decimal()
    loose_ball_duels_p90 = fields.Decimal()
    ball_recoveries_p90 = fields.Decimal()
    shots_blocked_p90 = fields.Decimal()
    shots_p90 = fields.Decimal()
    successful_passes_low_p90 = fields.Decimal()
    successful_passes_mid_p90 = fields.Decimal()
    successful_passes_high_p90 = fields.Decimal()
    short_or_medium_passes_p90 = fields.Decimal()
    pressing_duels_p90 = fields.Decimal()
    through_passes_p90 = fields.Decimal()
    passes_to_penalty_area_p90 = fields.Decimal()
    deep_completions_p90 = fields.Decimal()
    head_passes_p90 = fields.Decimal()
    deep_completed_crosses_p90 = fields.Decimal()
    free_kick_crosses_p90 = fields.Decimal()
    dribble_defences_p90 = fields.Decimal()
    shots_by_left_p90 = fields.Decimal()
    shots_by_right_p90 = fields.Decimal()
    shots_by_head_or_other_p90 = fields.Decimal()
    xg_p90 = fields.Decimal()
    xg_per_shot = fields.Decimal()
    non_penalty_goals_p90 = fields.Decimal()
    goals_by_head_or_other_p90 = fields.Decimal()
    opp_half_touches_p90 = fields.Decimal()
    open_play_shots_p90 = fields.Decimal()
    big_chances_p90 = fields.Decimal()
    shots_after_long_pass_p90 = fields.Decimal()
    shots_after_cross_p90 = fields.Decimal()
    shots_after_through_pass_p90 = fields.Decimal()
    own_shots_p90 = fields.Decimal()
    non_fk_outside_box_shots_p90 = fields.Decimal()
    non_p_dz_shots_p90 = fields.Decimal()
    long_balls_p90 = fields.Decimal()
    long_balls_received_p90 = fields.Decimal()
    crosses_into_small_box_p90 = fields.Decimal()
    received_passes_into_box_p90 = fields.Decimal()
    op_xA_p90 = fields.Decimal()
    op_second_xA_p90 = fields.Decimal()
    op_third_xA_p90 = fields.Decimal()
    op_xg_build_up_p90 = fields.Decimal()
    op_xg_chain_p90 = fields.Decimal()
    take_ons_p90 = fields.Decimal()
    spaces_p90 = fields.Decimal()
    take_ons_in_final_third_p90 = fields.Decimal()
    take_ons_in_box_p90 = fields.Decimal()
    danger_zone_entries_p90 = fields.Decimal()
    dispossessed_p90 = fields.Decimal()
    free_kick_shots_p90 = fields.Decimal()
    lost_balls_opp_half_p90 = fields.Decimal()
    lost_balls_own_half_p90 = fields.Decimal()
    lost_balls_leading_to_opp_shot_p90 = fields.Decimal()
    lost_balls_p90 = fields.Decimal()
    sp_xG_p90 = fields.Decimal()
    sp_xA_p90 = fields.Decimal()
    xG_from_corner_p90 = fields.Decimal()
    high_crosses_p90 = fields.Decimal()
    low_crosses_p90 = fields.Decimal()
    blocked_crosses_p90 = fields.Decimal()
    touches_in_box_p90 = fields.Decimal()
    successful_passes_to_final_third_percentage = fields.Decimal()
    passes_runs_percentage = fields.Decimal()
    spaces_total_runs_percentage = fields.Decimal()
    xA_per_key_passes = fields.Decimal()
    successful_take_ons_in_box_percentage = fields.Decimal()
    successful_crosses_percentage = fields.Decimal()
    successful_dribbles_percentage = fields.Decimal()
    successful_take_ons_percentage = fields.Decimal()
    successful_spaces_percentage = fields.Decimal()
    long_balls_completion = fields.Decimal()
    opp_half_touches_ratio = fields.Decimal()
    successful_crosses_into_small_box_percentage = fields.Decimal()
    accurate_dz_shots_percentage = fields.Decimal()
    successful_progressive_passes_percentage = fields.Decimal()
    won_dribble_defences_percentage = fields.Decimal()
    dz_scoring_percentage = fields.Decimal()
    own_shots_percentage = fields.Decimal()
    scoring_percentage = fields.Decimal()
    successful_long_passes_percentage = fields.Decimal()
    conversion_rate = fields.Decimal()
    successful_head_passes_percentage = fields.Decimal()
    successful_passes_to_penalty_area_percentage = fields.Decimal()
    successful_through_passes_percentage = fields.Decimal()
    loose_ball_duels_won_percentage = fields.Decimal()
    successful_short_or_medium_passes_percentage = fields.Decimal()
    offensive_duels_won_percentage = fields.Decimal()
    defensive_duels_won_percentage = fields.Decimal()
    successful_sliding_tackles_percentage = fields.Decimal()
    air_challenges_completion = fields.Decimal()
    patch_p90 = fields.Decimal()
    counterpressing_recoveries_p90 = fields.Decimal()
    lost_dribble_defences_p90 = fields.Decimal()
    final_third_touches_p90 = fields.Decimal()
    infractions_p90 = fields.Decimal()
    shots_by_primary_foot_percentage = fields.Decimal()
    yellow_cards_p90 = fields.Decimal()
    padj_offensive_ground_duels_p90 = fields.Decimal()
    padj_defensive_ground_duels_p90 = fields.Decimal()
    lost_balls_p90 = fields.Decimal()
    dribbles_p90 = fields.Decimal()
    returned_possessions_p90 = fields.Decimal()
    passes_into_final_third_p90 = fields.Decimal()
    received_passes_into_box_p90 = fields.Decimal()
    final_third_entries_p90 = fields.Decimal()
    successful_defensive_ground_duels_percentage = fields.Decimal()
    successful_offensive_ground_duels_percentage = fields.Decimal()
    padj_returned_possession_p90 = fields.Decimal()
    padj_counterpressing_recoveries_p90 = fields.Decimal()
    padj_patch_p90 = fields.Decimal()
    smart_and_through_passes_p90 = fields.Decimal()
    smart_passes_p90 = fields.Decimal()
    successful_smart_passes_percentage = fields.Decimal()
    successful_smart_and_through_passes_percentage = fields.Decimal()
    red_cards_p90 = fields.Decimal()
    op_xG_p90 = fields.Decimal()
    np_xG_p90 = fields.Decimal()
    xA_p90 = fields.Decimal()
    xA = fields.Decimal()
    padj_lost_dribble_defences_p90 = fields.Decimal()

# self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'



class SparkWyModelsMatchTeamSchema(Schema):
    id = fields.Integer()
    league_wyid = fields.Integer()
    season = fields.String()
    team_wyid = fields.Integer()
    player_wyid = fields.Integer()
    acc_passes = fields.String()
    inacc_passes = fields.String()
    acc_passes_total = fields.Integer()
    inacc_passes_total = fields.Integer()
    seconds_in_possession = fields.Integer()
    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'

class JSONWyMatchPlayerSchema(Schema):
    id = fields.Integer()
    league_wyid = fields.Integer()
    season = fields.String()
    team_name = fields.String()
    team_wyid = fields.Integer()
    player_name = fields.String()
    player_wyid = fields.Integer()
    match_wyid = fields.Integer()
    json = fields.String()
    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'


class JSONWyMatchTeamSchema(Schema):
    id = fields.Integer()
    league_wyid = fields.Integer()
    season = fields.String()
    team_name = fields.String()
    match_wyid = fields.Integer()
    team_wyid = fields.Integer()
    other_team_wyid = fields.Integer()
    json = fields.String()
    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'


class JSONWySeasonPlayerSchema(Schema):
    id = fields.Integer()
    league_wyid = fields.Integer()
    season = fields.String()
    player_wyid = fields.Integer()
    team_wyid = fields.Integer()
    json = fields.String()
    player_name = fields.String()

    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'


class JSONWyPassingCentersMatchTeamSchema(Schema):
    id = fields.Integer()
    league_wyid = fields.Integer()
    season = fields.String()
    team_wyid = fields.Integer()
    match_wyid = fields.Integer()
    passes = fields.String()
    players = fields.String()
    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'


class SparkWyPassesSonarSeasonPlayerSchema(Schema):
    id = fields.Integer()
    league_wyid = fields.Integer()
    season = fields.String()
    team_wyid = fields.Integer()
    player_wyid = fields.Integer()
    acc_passes = fields.String()
    inacc_passes = fields.String()
    acc_passes_total = fields.Integer()
    inacc_passes_total = fields.Integer()

    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'



class SparkWyModelsMatchTeamSchema(Schema):
    league_wyid = fields.Integer()
    league_name = fields.String()
    season_wyid = fields.Integer()
    match_wyid = fields.Integer()
    team_wyid = fields.Integer()
    defensive_actions_low = fields.Decimal()
    defensive_actions_mid = fields.Decimal()
    defensive_actions_high = fields.Decimal()
    op_shots = fields.Decimal()
    op_xG = fields.Decimal()
    season = fields.String()
    id = fields.Integer()
    team_name = fields.String()
    city = fields.String()
    country = fields.String()
    ppda = fields.Decimal()
    other_teams_seconds_in_possession = fields.Decimal()
    build_up_seconds = fields.Decimal()
    xG_after_corner = fields.Decimal()
    xG_after_free_kick = fields.Decimal()
    xG_after_throw_in = fields.Decimal()
    maintenance = fields.Decimal()
    sustained_threat = fields.Decimal()
    counter_attacks = fields.Decimal()
    fast_tempo = fields.Decimal()
    minutes = fields.Integer()
    match_count = fields.Integer()
    op_xG_per_shot = fields.Decimal()
    avg_def_line = fields.Decimal()
    wp_opp_half_count = fields.Decimal()
    wp_own_half_count = fields.Decimal()
    opp_half_left_wp_percentage = fields.Decimal()
    opp_half_mid_wp_percentage = fields.Decimal()
    opp_half_right_wp_percentage = fields.Decimal()
    own_half_left_wp_percentage = fields.Decimal()
    own_half_mid_wp_percentage = fields.Decimal()
    own_half_right_wp_percentage = fields.Decimal()
    returned_possession_percentage = fields.Decimal()
    pressed_sequence_percentage = fields.Decimal()
    possession_percentage = fields.Decimal()
    attack_speed = fields.Decimal()
    passes_per_possession = fields.Decimal()
    xG_after_corner_p90 = fields.Decimal()
    xG_after_throw_in_p90 = fields.Decimal()
    xG_after_free_kick_p90 = fields.Decimal()
    maintenance_p90 = fields.Decimal()
    sustained_threat_p90 = fields.Decimal()
    counter_attacks_p90 = fields.Decimal()
    fast_tempo_p90 = fields.Decimal()


    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'


class SparkWyModelsSeasonTeamSchema(Schema):
    id = fields.Integer()
    league_wyid = fields.Integer()
    league_name = fields.String()
    team_wyid = fields.Integer()
    season_wyid = fields.Integer()
    season = fields.String()
    city = fields.String()
    country = fields.String()
    team_name = fields.String()
    minutes = fields.Integer()
    xG_after_corner = fields.Decimal()
    xG_after_free_kick = fields.Decimal()
    xG_after_throw_in = fields.Decimal()
    op_shots = fields.Decimal()
    op_xG = fields.Decimal()
    maintenance = fields.Decimal()
    sustained_threat = fields.Decimal()
    counter_attacks = fields.Decimal()
    fast_tempo = fields.Decimal()
    ppda = fields.Decimal()
    op_xG_per_shot = fields.Decimal()
    avg_def_line = fields.Decimal()
    opp_half_left_wp_percentage = fields.Decimal()
    opp_half_mid_wp_percentage = fields.Decimal()
    opp_half_right_wp_percentage = fields.Decimal()
    own_half_left_wp_percentage = fields.Decimal()
    own_half_mid_wp_percentage = fields.Decimal()
    own_half_right_wp_percentage = fields.Decimal()
    returned_possession_percentage = fields.Decimal()
    pressed_sequence_percentage = fields.Decimal()
    possession_percentage = fields.Decimal()
    attack_speed = fields.Decimal()
    passes_per_possession = fields.Decimal()
    xG_after_corner_p90 = fields.Decimal()
    xG_after_throw_in_p90 = fields.Decimal()
    xG_after_free_kick_p90 = fields.Decimal()
    maintenance_p90 = fields.Decimal()
    sustained_threat_p90 = fields.Decimal()
    counter_attacks_p90 = fields.Decimal()
    fast_tempo_p90 = fields.Decimal()

    # self links
    def get_top_level_links(self, data, many):
        if many:
            self_link = "/data/"
        else:
            self_link = "/data/{}".format(data['id'])
        return {'self': self_link}

    class Meta:
        type_ = 'data'

